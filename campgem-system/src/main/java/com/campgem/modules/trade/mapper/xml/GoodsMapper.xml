<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.campgem.modules.trade.mapper.GoodsMapper">
	<update id="incrementReviewCount">
		update goods set review_count = review_count + 1 where id = #{goodsId}
	</update>
	
	<select id="queryPageList" resultType="com.campgem.modules.trade.vo.GoodsListVo">
		select
		g.id,g.goods_name,g.member_type,g.taxes,g.origin_price,g.category_id,
		(select goods_image from goods_images where goods_id = g.id and is_list_image = 1 limit 1) as goods_icon,
		if(g.member_type = 'ONLINE_BUSINESS' or g.member_type = 'LOCAL_BUSINESS', (select specifications_price from goods_specifications where goods_id = g.id order by
		specifications_price asc limit 1), sale_price) as sale_price
		from goods g
		where g.del_flag = 0
		  and g.status = 0
		<if test="query.quality != 0">
			and g.quality = #{query.quality}
		</if>
		<if test="query.categoryId != 'all'">
			and g.category_id = #{query.categoryId}
		</if>
		<choose>
			<when test="query.sort == 0">
				order by g.create_time desc
			</when>
			<when test="query.sort == 1">
				order by review_count desc
			</when>
			<when test="query.sort == 2">
				order by sale_price asc
			</when>
			<when test="query.sort == 3">
				order by sale_price desc
			</when>
		</choose>
	</select>
	
	<resultMap id="goodsDetail" type="com.campgem.modules.trade.vo.GoodsDetailVo">
		<id column="goodsId" property="id"/>
		<collection property="goodsImages" select="com.campgem.modules.trade.mapper.GoodsImagesMapper.queryGoodsImages"
		            ofType="com.campgem.modules.trade.entity.GoodsImages" column="goodsId"/>
		<collection property="goodsSpecifications"
		            select="com.campgem.modules.trade.mapper.GoodsSpecificationsMapper.queryGoodsSpecifications"
		            ofType="com.campgem.modules.trade.vo.GoodsSpecificationsVo" column="goodsId"/>
	</resultMap>
	<select id="queryGoodsDetail" resultMap="goodsDetail">
		SELECT g.id                                          as goodsId,
		       g.member_name,
		       g.member_type,
		       g.category_id,
		       g.review_count,
		       c.city_name,
		       u.university_name,
		       g.end_date,
		       g.stock,
		       g.quality,
		       IF
			       (g.member_type = 'ONLINE_BUSINESS' or g.member_type = 'LOCAL_BUSINESS', (SELECT specifications_price
			                         FROM goods_specifications
			                         WHERE goods_id = g.id
			                         ORDER BY specifications_price ASC
			                         LIMIT 1), g.sale_price) AS sale_price,
		       g.origin_price,
		       g.goods_name,
		       g.status,
		       g.taxes,
		       g.tags,
		       g.description,
		       g.create_time
		FROM goods g
			     left join city c on c.id = g.city_id
			     left join university u on u.id = g.university_id
		WHERE g.id = #{goodsId}
		  AND g.status = 0
		  AND g.del_flag = 0
	</select>
	
	<select id="queryGoodsRelated" resultType="com.campgem.modules.trade.vo.GoodsRelatedVo">
		SELECT g.id,
		       g.member_type,
		       g.goods_name,
		       IF
			       (g.member_type = 'ONLINE_BUSINESS' or g.member_type = 'LOCAL_BUSINESS', (SELECT specifications_price
			                         FROM goods_specifications
			                         WHERE goods_id = g.id
			                         ORDER BY specifications_price ASC
			                         LIMIT 1), g.sale_price)                        AS sale_price,
		       (SELECT goods_image FROM goods_images WHERE goods_id = g.id LIMIT 1) AS goods_icon
		from goods g
		WHERE category_id = #{categoryId}
		  AND g.del_flag = 0
		  AND g.status = 0
		  AND g.id != #{goodsId}
		order by g.review_count desc
		limit 5
	</select>
	
	<select id="queryOrderInfo" resultType="com.campgem.modules.trade.vo.OrderInfoTempVo">
		SELECT
			g.member_name,
		    g.uid AS seller_id,
			g.member_type,
			g.goods_name,
			( SELECT goods_image FROM goods_images gi WHERE gi.goods_id = #{goodsId} LIMIT 1 ) AS goods_icon,
			IF
				(
					#{specId} IS NULL or #{specId} = '',
					g.sale_price,
					( SELECT concat( gs.id, ',', gs.specifications_price, ',', gs.specifications_name, ',', gs.specifications_stock ) FROM goods_specifications gs WHERE gs.id = #{specId}  AND gs.goods_id = #{goodsId} )) AS specification,
			g.taxes
		FROM
			goods g
		WHERE g.id = #{goodsId}
		  AND g.status = 0
		  AND g.del_flag = 0
	</select>
	
	<sql id="queryConditions">
		<where>
			<if test="1 == 1">
				g.del_flag = 0
			</if>
			
			<if test="null != queryDto.goodsName and queryDto.goodsName != ''">
				<bind name="cname" value="'%' + queryDto.goodsName + '%'" />
				AND g.goods_name like #{cname}
			</if>
			
			<if test="null != queryDto.memberName and queryDto.memberName != ''">
				AND g.member_name = #{queryDto.memberName}
			</if>
		</where>
	</sql>
	
	<select id="queryManagePageList" resultType="com.campgem.modules.trade.vo.manage.MGoodsListVo">
            SELECT
                   g.id,
                   g.goods_name,
                   g.member_type,
                   g.member_name,
                   c.category_name,
                   city.city_name,
                   g.status,
                   g.create_time
            FROM
                goods g
	            LEFT JOIN category c ON c.id = g.category_id
	            LEFT JOIN city ON city.id = g.city_id
			<include refid="queryConditions" />
            ORDER BY g.create_time DESC
	</select>
	
	<select id="queryUserOrdersPageList" resultType="com.campgem.modules.user.vo.UserGoodsListVo">
		SELECT g.id,
		       g.goods_name,
		       (SELECT gi.goods_image FROM goods_images gi WHERE gi.goods_id = g.id AND gi.is_list_image = 1) as list_image,
		       g.sale_price,
		       g.status
		FROM goods g
		ORDER BY g.create_time DESC
	</select>
</mapper>